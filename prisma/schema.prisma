// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Example {
  id String @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//Necessary for Next Auth
model Account {
  id String  @id @default(cuid())
  userId String
  type String
  provider String
  providerAccountId String
  refresh_token String?
  access_token String?
  expires_at Int?
  token_type String?
  scope String?
  id_token String?
  session_state String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(cuid())
  sessionToken String @unique
  userId String
  expires DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id String @id @default(cuid())
  name String?
  email String?
  emailVerified DateTime?
  image String?
  accounts Account[]
  sessions Session[]
}

model VerificationToken {
  identifier String
  token String @unique
  expires DateTime

  @@unique([identifier, token])
}

model Product {
  id Int @id @default(autoincrement())
  title String
  image ProductImage[]
  category String
  available Int?
  price Int
  description String
  brand String
  colors String?
  sizes String?
}

model ProductImage {
  id Int @id @default(autoincrement())
  fileName String
  originalFileName String
  path String
  product Product @relation(fields: [productId], references: [id])
  productId Int
}
